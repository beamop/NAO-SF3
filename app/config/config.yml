imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    mailer_from: noreply@nao-association.com
    mailer_to: noreply@nao-association.com
    admin_email: admin@nao-association.com
    images_directory: '%kernel.project_dir%/web/uploads/observation'
    upload_blog_directory: '%kernel.project_dir%/web/uploads/blog'

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        google_maps_api_key: '%GoogleMapsApiKey%'
        mailer_user: '%mailer_user%'
        mailer_password: '%mailer_password%'
        upload_blog_directory: '%upload_blog_directory%'


# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: utf8mb4
        default_table_options:
            charset: utf8
            collate: utf8_general_ci
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    spool: { type: memory }
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    port: '%mailer_port%'

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"

liip_imagine:
    resolvers:
        default:
            web_path: ~
    filter_sets:
        cache: ~
        # the name of the "filter set"
        thumb_xs:
            # adjust the image quality to 75%
            quality: 100
            # list of transformations to apply (the "filters")
            filters:
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail: { size: [75, 50], mode: inset }
                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
                #background: { size: [124, 94], position: center, color: '#000000' }
        thumb_sm:
            filters:
                thumbnail: { size: [150, 95], mode: inset }
            quality: 100
        thumb_md:
            filters:
                thumbnail: { size: [330, 190], mode: inset }
            quality: 100
        thumb_lg:
            filters:
                thumbnail: { size: [660, 380], mode: inset }
            quality: 100
        thumb_bl:
            filters:
                thumbnail: { size: [900, 500], mode: inset }
            quality: 100


# Stof\DoctrineExtensionsBundle configuration
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true

ivory_ck_editor:
    configs:
        full_config:
            jquery: true
            height: '900px'
            language: fr
            filebrowserBrowseRoute: elfinder
            filebrowserBrowseRouteParameters: []
            extraPlugins: 'lineutils,widget,dialog,codesnippet,widgetselection'
        basic_config:
            jquery: true
            heihgt: '250px'
            width: '100%'
            language: fr
            toolbar: basic

welp_mailchimp:
    api_key: '%mailchimp_api_key%'
    #list_provider: 'welp_mailchimp.list_provider'
    lists:
        548215b1ed: #identifiant de la liste
            subscriber_provider: 'nao_mailchimp_fos_subscriber_provider' # provider fourni en cas de synchronisation totale
            webhook_secret: 'TheSecretPass' # webhook secret qui permet de sécuriser la liaison entre MailChimp et votre application
            webhook_url: 'https://www.nao-association.com/mailchimp/webhook/endpoint' # L'url webhook enregistré dans la liste MailChimp
            merge_fields:
                -
                    tag: FNAME
                    name: First Name
                    type: text
                    public: true
                -
                    tag: LNAME
                    name: Last Name
                    type: text
                    public: true

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    bundles:
        - AppBundle
    filters:
        cssrewrite: ~
        uglifycss:
            bin: /usr/local/bin/uglifycss
        uglifyjs2:
            bin: /usr/local/bin/uglifyjs